数据类型
|整形 int char short
|非负整形 unsigned
|浮点型 float 
|双精度浮点型 double
|布尔型 bool
|数组 xxx[]
|指针 xxx*

运算符
|算术运算符 +-*/%
|比较运算符 > < == != >= <=
|逻辑运算符 && || ！
|位运算符 & | ~ ^

函数
|普通函数
|lambda函数 [](){} 
|构造函数 先构造基类 再构造类成员 最后构造自身
|析构函数 与构造函数的执行顺序互为镜像关系
|复制构造函数 xxx(const xxx& rhs)
|移动构造函数 xxx(const xxx&& rhs)
|赋值运算符 xxx& xxx(const xxx& rhs)
|静态成员函数 只能访问静态成员变量，不能访问普通成员变量。
|友元函数 
|模板函数
|内联函数
|仿函数 实现operator运算符的类

关键字
#define 注意参数加括号
typedef 类型别名，本名在前，别名在后
using 类型别名 别名在前 本名在后 另外可以定义模板别名
new
delete
malloc
free
sizeof
const 
1.修饰普通变量时表示其为一个常量 
2.修饰指针时，如果const在*后则表示指针的指向不能修改，如果const在*前则表示指针所指内容不能修改 
3.修饰成员函数时，表示该函数不能修改成员变量
static 
1.修饰局部变量 生命周期从第一次初始化到程序结束
2.修饰全局变量 作用域只限于当前文件
3.修饰成员变量 该变量不属于任何类对象，被所有类对象共有
4.修饰成员函数 该函数可以直接被类调用，只能访问静态成员变量
5.修饰非成员函数 作用域只限于当前文件
final 表示该类不能再被继承
override 表示该函数为重写的函数
explicit 表示禁止显式构造
virtual
nullptr
dynamic_cast 用于类指针或类引用的向上转换或向下转换，转换成功则返回对应的指针，如果失败则返回null
static_cast 类似于强制类型转换，不是安全的
const_cast 去除const属性
reinterpret_cast 指针之间的强制转换

类
|重载
|继承
|多态
|虚继承
|友元类

模板
全特化
偏特化





